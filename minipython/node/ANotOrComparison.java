/* This file was generated by SableCC (http://www.sablecc.org/). */

package minipython.node;

import java.util.*;
import minipython.analysis.*;

public final class ANotOrComparison extends POrComparison
{
    private POrComparison _orComparison_;

    public ANotOrComparison()
    {
    }

    public ANotOrComparison(
        POrComparison _orComparison_)
    {
        setOrComparison(_orComparison_);

    }
    public Object clone()
    {
        return new ANotOrComparison(
            (POrComparison) cloneNode(_orComparison_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANotOrComparison(this);
    }

    public POrComparison getOrComparison()
    {
        return _orComparison_;
    }

    public void setOrComparison(POrComparison node)
    {
        if(_orComparison_ != null)
        {
            _orComparison_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _orComparison_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_orComparison_);
    }

    void removeChild(Node child)
    {
        if(_orComparison_ == child)
        {
            _orComparison_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_orComparison_ == oldChild)
        {
            setOrComparison((POrComparison) newChild);
            return;
        }

    }
}
